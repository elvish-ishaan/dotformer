// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  password       String
  name           String?
  username       String?        @unique
  bio            String?
  avatar         String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  apiKeys        ApiKey[]
  assets         Asset[]
}

model Asset {
  id        String   @id @default(uuid())
  fileName  String
  fileSize  Int
  fileType  String
  url       String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ApiKey {
  id          String      @id @default(uuid())
  name        String
  key         String      @unique
  lastUsed    DateTime?
  expiresAt   DateTime?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordReset {
  id        String   @id @default(cuid())
  email     String
  otp       String
  used      Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([otp])
}
